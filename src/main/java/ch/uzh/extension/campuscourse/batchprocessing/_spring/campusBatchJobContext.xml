<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:batch="http://www.springframework.org/schema/batch"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/batch
        http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

	<!-- ======================================================================================= -->
	<!-- ==============SAP IMPORT JOB================== -->
	<!-- ======================================================================================= -->
	<batch:job id="sapImportJob" >
		<batch:listeners>
            <batch:listener ref="sapImportJobExecutionListener" />
		</batch:listeners>

		<batch:step id="importControlFile" parent="sapImportStep" >
			<batch:tasklet>
				<batch:chunk reader="exportReader" processor="exportProcessor"  writer="exportWriter" skip-limit="8" retry-limit="5"/>
			</batch:tasklet>
			<batch:next on="COMPLETED" to="importOrgs"/>
			<batch:fail on="FAILED" exit-code="EARLY TERMINATION"/>
		</batch:step>

		<batch:step id="importOrgs" parent="sapImportStep">
			<batch:tasklet>
				<batch:chunk reader="orgReader" processor="orgProcessor" writer="orgWriter" commit-interval="20" skip-limit="100" retry-limit="5"/>
			</batch:tasklet>
			<batch:next on="COMPLETED" to="importStammDaten"/>
			<batch:fail on="FAILED" exit-code="EARLY TERMINATION"/>
		</batch:step>

		<batch:split id="importStammDaten" task-executor="splitTaskExecutor">
			<batch:next on="COMPLETED" to="importBooking" />
			<batch:fail on="FAILED" exit-code="EARLY TERMINATION"/>
			<batch:flow>
				<batch:step id="importStudents" parent="sapImportStep">
					<batch:tasklet>
						<batch:chunk reader="studentReader" processor="studentProcessor" writer="studentWriter" commit-interval="20" skip-limit="1000" retry-limit="5"/>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:flow>
				<batch:step id="importLecturers" parent="sapImportStep">
					<batch:tasklet>
						<batch:chunk reader="lecturerReader" processor="lecturerProcessor" writer="lecturerWriter" commit-interval="20" skip-limit="500" retry-limit="5"/>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:flow>
				<batch:step id="importCourses" parent="sapImportStep">
					<batch:tasklet>
						<batch:chunk reader="courseReader" processor="courseProcessor" writer="courseWriter" commit-interval="20" skip-limit="100" retry-limit="5"/>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
		</batch:split>

		<batch:split id="importBooking" task-executor="splitTaskExecutor">
			<batch:flow>
				<batch:step id="importStudentCourses" parent="sapImportStep">
					<batch:tasklet>
						<batch:chunk reader="studentCourseReader" processor="studentCourseProcessor" writer="studentCourseWriter" commit-interval="20" skip-limit="1000" retry-limit="5"/>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:flow>
				<batch:step id="importLecturerCourses" parent="sapImportStep">
					<batch:tasklet>
						<batch:chunk reader="lecturerCourseReader" processor="lecturerCourseProcessor" writer="lecturerCourseWriter" commit-interval="20" skip-limit="500" retry-limit="5"/>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:flow>
				<batch:step id="importTexts" parent="sapImportStep">
					<batch:tasklet>
						<batch:chunk reader="textReader" processor="textProcessor" writer="textWriter" skip-limit="100000" commit-interval="20" retry-limit="5"/>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<!-- DISABLED FOR NOW -->
			<!--
			<batch:flow>
				<batch:step id="import_events" parent="sapImportStep">
					<batch:tasklet>
						<batch:chunk reader="eventReader" processor="eventProcessor" writer="eventWriter" commit-interval="50" skip-limit="100000" retry-limit="5">
						</batch:chunk>
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			 -->
		</batch:split>
	</batch:job>

    <!-- ======================================================================================= -->
    <!-- ==============USER MAPPING AND CAMPUS COURSE SYNCHRONIZATION JOB================== -->
    <!-- ======================================================================================= -->
    <batch:job id="userMappingAndSynchronizationJob">
        <batch:listeners>
            <batch:listener ref="userMappingAndSynchronizationJobExecutionListener" />
        </batch:listeners>

        <batch:split id="userMapping" task-executor="splitTaskExecutor">
            <batch:next on="COMPLETED" to="campusCourseSynchronization" />
            <batch:flow>
                <batch:step id="studentMapping" parent="userMappingStep">
                    <batch:tasklet task-executor="taskletTaskExecutor">
                        <batch:chunk reader="studentMappingReader"  writer="studentMappingWriter" commit-interval="20" skip-limit="10" retry-limit="5"/>
                    </batch:tasklet>
                </batch:step>
            </batch:flow>
            <batch:flow>
                <batch:step id="lecturerMapping" parent="userMappingStep">
                    <batch:tasklet task-executor="taskletTaskExecutor">
                        <batch:chunk reader="lecturerMappingReader"  writer="lecturerMappingWriter" commit-interval="20" skip-limit="10" retry-limit="5"/>
                    </batch:tasklet>
                </batch:step>
            </batch:flow>
        </batch:split>

        <batch:step id="campusCourseSynchronization" parent="campusCourseSynchronzationStep">
            <batch:tasklet task-executor="synchronizationTaskletTaskExecutor">
                <batch:chunk reader="campusCourseSynchronizationReader"  writer="campusCourseSynchronizationWriter" commit-interval="20" skip-limit="50" retry-limit="5"/>
            </batch:tasklet>
        </batch:step>
    </batch:job>

	<!-- ======================================================================================= -->
	<!-- ==============STEP ================== -->
	<!-- ======================================================================================= -->
	<batch:step id="sapImportStep" parent="campusStep">
		<batch:listeners>
			<batch:listener ref="sapImportBatchStepExecutionListener" />
		</batch:listeners>
	</batch:step>

	<batch:step id="userMappingStep" parent="campusStep">
		<batch:listeners>
			<batch:listener ref="userMappingBatchStepExecutionListener" />
		</batch:listeners>
	</batch:step>

	<batch:step id="campusCourseSynchronzationStep" parent="campusStep">
		<batch:listeners>
			<batch:listener ref="campusCourseSynchronizationBatchStepExecutionListener" />
		</batch:listeners>
	</batch:step>

	<batch:step id="campusStep" abstract="true">
		<batch:tasklet>
			<batch:chunk commit-interval="500">
				<batch:retryable-exception-classes>
					<batch:include class="org.hibernate.StaleObjectStateException" />
					<batch:include class="org.springframework.dao.OptimisticLockingFailureException" />
					<batch:include class="org.hibernate.NonUniqueObjectException" />
					<batch:include class="org.hibernate.StaleStateException" />
					<batch:include class="org.hibernate.exception.LockAcquisitionException" />
				</batch:retryable-exception-classes>
				<batch:skippable-exception-classes>
					<batch:include class="org.springframework.batch.item.file.FlatFileParseException" />
					<batch:include class="org.hibernate.exception.ConstraintViolationException" />
					<batch:include class="ch.uzh.extension.campuscourse.common.CampusCourseException" />
					<batch:include class="org.hibernate.LazyInitializationException" />
					<batch:include class="java.lang.NullPointerException" />
					<batch:include class="org.olat.core.logging.AssertException" />
					<batch:include class="javax.persistence.EntityNotFoundException" />
				</batch:skippable-exception-classes>
			</batch:chunk>
		</batch:tasklet>
	</batch:step>

</beans>
